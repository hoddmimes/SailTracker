buildscript {
    repositories { flatDir name: 'libs', dirs: "./libs" }
    dependencies { classpath 'com.hoddmimes.versionplugin:versionplugin:1.0' }
}

plugins {
    id 'java'
    id 'war'
}

apply plugin: 'com.hoddmimes.versionplugin'




group 'com.hoddmimes.sailtracker'
version '1.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

VersionTask {
    versionFile = "$project.rootDir/version.json"
    generatedVersionFile = "$project.projectDir/src/main/java/com/hoddmimes/sailtracker/generated/Version.java"
}

tasks.register('bumpMinorVersion', com.hoddmimes.versionplugin.VersionTask) {
    action = "minor"
}

tasks.register('bumpMajorVersion', com.hoddmimes.versionplugin.VersionTask) {
    action = "major"
}

tasks.register('generateVersion', com.hoddmimes.versionplugin.VersionTask)

task  renameWar(  type: Copy ) {
    from ('build/libs')
    include 'sailtracker-1.0.war'
    destinationDir file('./')
    rename 'sailtracker-1.0.war', "sailtracker.war"
    doLast {
        println('**** Renamed WAR file')
    }
}
task(generateDBObjects, type: JavaExec ) {
    main = 'JsonTransform'
    classpath = files('./libs/pojojson-generate-1.1.jar')
    args  '-xml', './xml_definitions/DBObjectsFileSet.xml'
    doLast {
        println "***** Generated SailTracker Objects"
    }
}

task deleteGeneratedFiles(type: Delete) {
    delete fileTree('src/main/java/com/hoddmimes/sailtracker/generated') {
        include '*.java'
    }
    delete fileTree('src/main/java/com/hoddmimes/sailtracker/generated/messages') {
        include '*.java'
    }
    delete fileTree('src/main/java/com/hoddmimes/sailtracker/generated/dbobjects') {
        include '*.java'
    }
    delete fileTree('src/main/java/com/hoddmimes/sailtracker/generated/dbobjects') {
        include '*.java'
    }
    delete fileTree('build/libs/*.jar') {
        include 'sailtracker.war'
    }
    delete fileTree('./') {
        include 'sailtracker.war'
    }
    doLast {
        println "***** Cleaned Generated Files"
    }
}


task(generateMessages, type: JavaExec ) {
    main = 'JsonTransform'
    classpath = files('./libs/pojojson-generate-1.1.jar')
    args  '-xml', './xml_definitions/MessagesFileSet.xml'
    doLast {
        println "***** Generated Java SailTracker Messages"
    }
}




tasks.register('generateCode') {
    doFirst {
        deleteGeneratedFiles
    }
    dependsOn( generateVersion )
    dependsOn( generateMessages )
    dependsOn( generateDBObjects )

    doLast {
        println "***** SailTracker message/objects generated"
    }
}

tasks.register('copyToHoddmimes') {
    doLast {
        ant.scp( file : "./sailtracker.war", trust : 'yes', keyfile : '${user.home}/.ssh/id_rsa', port : 11721,  todir : "bertilsson@www.hoddmimes.com:")
        println("***** Copy War to production")
    }
}

ant.taskdef(
        name: 'scp',
        classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
        classpath: 'libs/ant-jsch.jar:libs/jsch-0.2.7.jar')

war.archiveBaseName='sailtracker'
project.webAppDirName = 'WebContent'

war {
    from '../WebContent' // adds a file-set to the root of the archive
}


repositories {
    mavenCentral()
}

compileJava.dependsOn( generateCode )

build.finalizedBy(renameWar)
build.finalizedBy(copyToHoddmimes)


dependencies {

    implementation fileTree(dir: 'libs', include: 'pojojson-1.1.jar')
    implementation fileTree(dir: './libs', include: 'jcommon-1.0.23.jar')

    //implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '3.1.0'
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'

    //providedCompile group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

    implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.12.12'
    implementation group: 'org.mongodb', name: 'mongodb-driver-core', version: '3.12.12'
    implementation group: 'org.mongodb', name: 'bson', version: '3.12.12'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.20.0'

    implementation group: 'com.googlecode.jatl', name: 'jatl', version: '0.2.3'
    implementation group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    implementation group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.39'
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.39'
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.39'
    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.39'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}